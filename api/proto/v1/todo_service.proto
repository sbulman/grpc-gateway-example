syntax = "proto3";
package v1;

option go_package = "github.com/sbulman/pkg/api/v1";

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title : "ToDo Service";
    version : "1.0";
  };

  schemes : HTTP;
  consumes : "application/json";
  produces : "application/json";
};

message ToDo {
  int64 id = 1;
  string title = 2;
  string description = 3;
  google.protobuf.Timestamp reminder = 4;
}

message CreateRequest { ToDo todo = 1; }
message CreateResponse { int64 id = 1; }

message ReadRequest { int64 id = 1; }
message ReadResponse { ToDo todo = 1; }

message UpdateRequest { ToDo todo = 1; }
message UpdateResponse { int64 updated = 1; }

message DeleteRequest { int64 id = 1; }
message DeleteResponse { int64 deleted = 1; }

message ReadAllRequest {}
message ReadAllResponse { repeated ToDo todos = 1; }

service ToDoService {
  rpc Create(CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post : "/v1/todos"
      body : "*"
    };
  }

  rpc Read(ReadRequest) returns (ReadResponse) {
    option (google.api.http) = {
      get : "/v1/todos/{id}"
    };
  }

  rpc Update(UpdateRequest) returns (UpdateResponse) {
    option (google.api.http) = {
      put : "/v1/todos/{todo.id}"
      body : "*"

      additional_bindings {patch : "/v1/todos/{todo.id}" body : "*"}
    };
  }

  rpc Delete(DeleteRequest) returns (DeleteResponse) {
    option (google.api.http) = {
      delete : "/v1/todos/{id}"
    };
  }

  rpc ReadAll(ReadAllRequest) returns (ReadAllResponse) {
    option (google.api.http) = {
      get : "/v1/todos"
    };
  }
}
